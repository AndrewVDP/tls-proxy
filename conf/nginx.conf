# When running in a container we don't want the initial process to exit
daemon off;

# With Docker, only one process per container makes sense, because if more
# throughput is needed more containers should be run behind a load balancer
worker_processes 1;


pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}


http {
    default_type  application/octet-stream;

    log_format  default '$time_iso8601 - $remote_addr "$request" $status'
                        '$bytes_sent $request_time $sent_http_x_request_id'
                        '"$http_user_agent"';
    access_log  /dev/stdout default;
    error_log   /dev/stderr warn;

    sendfile        on;

    keepalive_timeout  65;

    client_max_body_size 20M;

    # Baseline proxy configuration
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Proxy cache configuration
    proxy_cache_revalidate on;
    proxy_cache_lock on;
    proxy_cache_lock_timeout 10s;
    proxy_connect_timeout 5s;
    proxy_read_timeout 60s;
    proxy_cache_path /var/nginx/app-cache levels=2:2 keys_zone=app-cache:16m max_size=256m inactive=1h;
    proxy_cache app-cache;

    server {
        listen          443 ssl;
        server_name     _;

        set $target_service {{TARGET_SERVICE}};

        # Use the resolver for the docker dns server
        resolver 127.0.0.11;

        ssl_certificate        tls/server.crt;
        ssl_certificate_key    tls/server.key;
        ssl_protocols          TLSv1.2;
        ssl_ciphers            TLSv1.2+FIPS:kRSA+FIPS:!eNULL:!aNULL;
        ssl_session_cache      shared:SSL:10m;
        ssl_session_timeout    10m;
        ssl_session_tickets    off;

        # Precomputed Diffe Hellman parameters improve the
        # security of key exhange with certain cipher algorithms
        ssl_dhparam            tls/dhparam.pem;

        # OCSP stapling provides some additional privacy and performance benefits
        ssl_stapling             on;
        ssl_stapling_verify      on;
        ssl_trusted_certificate  tls/server.crt;

        location / {
            proxy_pass      http://$target_service;
            proxy_redirect  http:// https://;
        }

    }
}
